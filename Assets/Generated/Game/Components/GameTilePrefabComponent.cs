//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public TilePrefabComponent tilePrefab { get { return (TilePrefabComponent)GetComponent(GameComponentsLookup.TilePrefab); } }
    public bool hasTilePrefab { get { return HasComponent(GameComponentsLookup.TilePrefab); } }

    public void AddTilePrefab(string[] newName) {
        var index = GameComponentsLookup.TilePrefab;
        var component = (TilePrefabComponent)CreateComponent(index, typeof(TilePrefabComponent));
        component.name = newName;
        AddComponent(index, component);
    }

    public void ReplaceTilePrefab(string[] newName) {
        var index = GameComponentsLookup.TilePrefab;
        var component = (TilePrefabComponent)CreateComponent(index, typeof(TilePrefabComponent));
        component.name = newName;
        ReplaceComponent(index, component);
    }

    public void RemoveTilePrefab() {
        RemoveComponent(GameComponentsLookup.TilePrefab);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTilePrefab;

    public static Entitas.IMatcher<GameEntity> TilePrefab {
        get {
            if (_matcherTilePrefab == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TilePrefab);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTilePrefab = matcher;
            }

            return _matcherTilePrefab;
        }
    }
}
